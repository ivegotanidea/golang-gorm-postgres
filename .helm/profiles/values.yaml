replicaCount: 1

image:
  repository: ""
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
   fsGroup: 2000

securityContext:
   capabilities:
     drop:
     - ALL
   readOnlyRootFilesystem: true
   runAsNonRoot: true
   runAsUser: 1000

service:
  type: ClusterIP
  port: 8888

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
   limits:
     cpu: 0.5
     memory: 512Mi
   requests:
     cpu: 100m
     memory: 128Mi

livenessProbe:
  httpGet:
    path: /ping
    port: http
readinessProbe:
  httpGet:
    path: /health
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

volumes:
 - name: casbin
   secret:
     secretName: casbin

volumeMounts:
 - name: casbin
   mountPath: "/etc/casbin"
   readOnly: true

extraEnvVars:
  - name: CASBIN_MODEL_PATH
    value: /etc/casbin/model.conf
  - name: CASBIN_POLICY_PATH
    value: /etc/casbin/policy.csv

nodeSelector: {}

tolerations: []

affinity: {}

envFileName: app.env

casbin:
  modelPath: config/casbin/model.conf
  policyPath: config/casbin/policy.csv
